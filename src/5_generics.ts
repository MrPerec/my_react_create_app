/**
 * Generics
 */

/* Посмотрим Generic на примере массива */
const myArray: MyArray<number> = [1, 2, 3]; //обявили Generic через массив чисел
/* Массив это какой-то числовой тип у которого есть числовое значение
задав которое мы получаем значение, например так
MyArray[123] */

/** Напишем свой интерфейс массива
 * MyArray принимает некий тип T и устанавливает тип T в index сигнатуру.
 * Т.е. generics это как аргумент у ф-ии
 */
interface MyArray<T> {
  [N: number]: T;

  map(fn: (el: T) => T): T[];
}

// теперь когда мы обращаемся к myArray и присваиваем число то переменная variable видит тип число
let variable = myArray[1];

//если обратится к массиву методом map то он не сработает т.к. мы его не описали, опишем
// myArray.map

// после того как описали, вызываем с числами
myArray.map((f: number) => f + 1); // сработало

/* если вызвать со строками то будет ругаться потому что в интерфейсе мы указали T как число */
myArray.map((f: number) => `f + ${f}`); // подчеркивает
